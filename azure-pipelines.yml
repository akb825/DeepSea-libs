trigger:
  - master
variables:
  - group: Common
jobs:
  - job: Linux
    pool:
        vmImage: ubuntu-16.04
    workspace:
        clean: all
    steps:
      - script: $(Build.SourcesDirectory)/build.sh -o DeepSea-libs-linux.tar.gz
        workingDirectory: $(Build.BinariesDirectory)
        displayName: Build
      - publish: $(Build.BinariesDirectory)/DeepSea-libs-linux.tar.gz
        artifact: Linux
        displayName: Publish
  - job: Android
    pool:
        vmImage: ubuntu-16.04
    workspace:
        clean: all
    strategy:
        matrix:
            arm32:
                platform: armeabi-v7a
            arm64:
                platform: arm64-v8a
            x86:
                platform: x86
            x86_64:
                platform: x86_64
    steps:
      - script: |
            $(Build.SourcesDirectory)/build.sh -p android \
                --android-ndk $ANDROID_HOME/ndk-bundle --android-abi $(platform) \
                -o DeepSea-libs-android-$(platform).tar.gz
        workingDirectory: $(Build.BinariesDirectory)
        displayName: Build
      - publish: $(Build.BinariesDirectory)/DeepSea-libs-android-$(platform).tar.gz
        artifact: Android $(platform)
        displayName: Publish
  - job: Mac
    pool:
        vmImage: macOS-10.13
    workspace:
        clean: all
    steps:
      - script: |
            export DEVELOPER_DIR=/Applications/Xcode_8.3.3.app/Contents/Developer
            SYSROOT=$DEVELOPER_DIR/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk
            $(Build.SourcesDirectory)/build.sh -DCMAKE_OSX_SYSROOT=$SYSROOT \
                -o DeepSea-libs-mac.tar.gz
        workingDirectory: $(Build.BinariesDirectory)
        displayName: Build
      - publish: $(Build.BinariesDirectory)/DeepSea-libs-mac.tar.gz
        artifact: Mac
        displayName: Publish
  - job: iOS
    pool:
        vmImage: macOS-10.13
    workspace:
        clean: all
    steps:
      - script: |
            $(Build.SourcesDirectory)/build.sh -p ios -o DeepSea-libs-ios.tar.gz
        workingDirectory: $(Build.BinariesDirectory)
        displayName: Build
      - publish: $(Build.BinariesDirectory)/DeepSea-libs-ios.tar.gz
        artifact: iOS
        displayName: Publish
  - job: Windows
    pool:
        vmImage: vs2017-win2016
    workspace:
        clean: all
    strategy:
        matrix:
            win32:
                platform: win32
            win64:
                platform: win64
    steps:
      - script: $(Build.SourcesDirectory)\build.bat -p $(platform) -o DeepSea-libs-$(platform).zip
        workingDirectory: $(Build.BinariesDirectory)
        displayName: Build
      - publish: $(Build.BinariesDirectory)\DeepSea-libs-$(platform).zip
        artifact: Windows $(platform)
        displayName: Publish

# vim: ts=4 sts=4 sw=4 et
